// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/comment/comment.proto

package social_protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetCommentsByPostIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PostId        int64                  `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommentsByPostIdRequest) Reset() {
	*x = GetCommentsByPostIdRequest{}
	mi := &file_proto_comment_comment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommentsByPostIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentsByPostIdRequest) ProtoMessage() {}

func (x *GetCommentsByPostIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comment_comment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentsByPostIdRequest.ProtoReflect.Descriptor instead.
func (*GetCommentsByPostIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_comment_comment_proto_rawDescGZIP(), []int{0}
}

func (x *GetCommentsByPostIdRequest) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

type GetCommentsByPostIdResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	IsPinned      bool                   `protobuf:"varint,2,opt,name=is_pinned,json=isPinned,proto3" json:"is_pinned,omitempty"`
	CommentId     int64                  `protobuf:"varint,3,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	AuthorId      int64                  `protobuf:"varint,4,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	Rating        []string               `protobuf:"bytes,5,rep,name=rating,proto3" json:"rating,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommentsByPostIdResponse) Reset() {
	*x = GetCommentsByPostIdResponse{}
	mi := &file_proto_comment_comment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommentsByPostIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentsByPostIdResponse) ProtoMessage() {}

func (x *GetCommentsByPostIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comment_comment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentsByPostIdResponse.ProtoReflect.Descriptor instead.
func (*GetCommentsByPostIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_comment_comment_proto_rawDescGZIP(), []int{1}
}

func (x *GetCommentsByPostIdResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *GetCommentsByPostIdResponse) GetIsPinned() bool {
	if x != nil {
		return x.IsPinned
	}
	return false
}

func (x *GetCommentsByPostIdResponse) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *GetCommentsByPostIdResponse) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *GetCommentsByPostIdResponse) GetRating() []string {
	if x != nil {
		return x.Rating
	}
	return nil
}

type AddCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddCommentRequest) Reset() {
	*x = AddCommentRequest{}
	mi := &file_proto_comment_comment_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCommentRequest) ProtoMessage() {}

func (x *AddCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comment_comment_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCommentRequest.ProtoReflect.Descriptor instead.
func (*AddCommentRequest) Descriptor() ([]byte, []int) {
	return file_proto_comment_comment_proto_rawDescGZIP(), []int{2}
}

func (x *AddCommentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type AddCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     int64                  `protobuf:"varint,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddCommentResponse) Reset() {
	*x = AddCommentResponse{}
	mi := &file_proto_comment_comment_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCommentResponse) ProtoMessage() {}

func (x *AddCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comment_comment_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCommentResponse.ProtoReflect.Descriptor instead.
func (*AddCommentResponse) Descriptor() ([]byte, []int) {
	return file_proto_comment_comment_proto_rawDescGZIP(), []int{3}
}

func (x *AddCommentResponse) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

type ChangeCommentRatingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     int64                  `protobuf:"varint,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeCommentRatingRequest) Reset() {
	*x = ChangeCommentRatingRequest{}
	mi := &file_proto_comment_comment_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeCommentRatingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeCommentRatingRequest) ProtoMessage() {}

func (x *ChangeCommentRatingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comment_comment_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeCommentRatingRequest.ProtoReflect.Descriptor instead.
func (*ChangeCommentRatingRequest) Descriptor() ([]byte, []int) {
	return file_proto_comment_comment_proto_rawDescGZIP(), []int{4}
}

func (x *ChangeCommentRatingRequest) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

type ChangeCommentRatingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rating        []string               `protobuf:"bytes,1,rep,name=rating,proto3" json:"rating,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeCommentRatingResponse) Reset() {
	*x = ChangeCommentRatingResponse{}
	mi := &file_proto_comment_comment_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeCommentRatingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeCommentRatingResponse) ProtoMessage() {}

func (x *ChangeCommentRatingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comment_comment_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeCommentRatingResponse.ProtoReflect.Descriptor instead.
func (*ChangeCommentRatingResponse) Descriptor() ([]byte, []int) {
	return file_proto_comment_comment_proto_rawDescGZIP(), []int{5}
}

func (x *ChangeCommentRatingResponse) GetRating() []string {
	if x != nil {
		return x.Rating
	}
	return nil
}

type PinCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     int64                  `protobuf:"varint,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PinCommentRequest) Reset() {
	*x = PinCommentRequest{}
	mi := &file_proto_comment_comment_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PinCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PinCommentRequest) ProtoMessage() {}

func (x *PinCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comment_comment_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PinCommentRequest.ProtoReflect.Descriptor instead.
func (*PinCommentRequest) Descriptor() ([]byte, []int) {
	return file_proto_comment_comment_proto_rawDescGZIP(), []int{6}
}

func (x *PinCommentRequest) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

type PinCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     int64                  `protobuf:"varint,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PinCommentResponse) Reset() {
	*x = PinCommentResponse{}
	mi := &file_proto_comment_comment_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PinCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PinCommentResponse) ProtoMessage() {}

func (x *PinCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comment_comment_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PinCommentResponse.ProtoReflect.Descriptor instead.
func (*PinCommentResponse) Descriptor() ([]byte, []int) {
	return file_proto_comment_comment_proto_rawDescGZIP(), []int{7}
}

func (x *PinCommentResponse) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

type DeleteCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     int64                  `protobuf:"varint,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCommentRequest) Reset() {
	*x = DeleteCommentRequest{}
	mi := &file_proto_comment_comment_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentRequest) ProtoMessage() {}

func (x *DeleteCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comment_comment_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentRequest.ProtoReflect.Descriptor instead.
func (*DeleteCommentRequest) Descriptor() ([]byte, []int) {
	return file_proto_comment_comment_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteCommentRequest) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

type DeleteCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     int64                  `protobuf:"varint,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCommentResponse) Reset() {
	*x = DeleteCommentResponse{}
	mi := &file_proto_comment_comment_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentResponse) ProtoMessage() {}

func (x *DeleteCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comment_comment_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentResponse.ProtoReflect.Descriptor instead.
func (*DeleteCommentResponse) Descriptor() ([]byte, []int) {
	return file_proto_comment_comment_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteCommentResponse) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

var File_proto_comment_comment_proto protoreflect.FileDescriptor

const file_proto_comment_comment_proto_rawDesc = "" +
	"\n" +
	"\x1bproto/comment/comment.proto\x12\acomment\"5\n" +
	"\x1aGetCommentsByPostIdRequest\x12\x17\n" +
	"\apost_id\x18\x01 \x01(\x03R\x06postId\"\xa8\x01\n" +
	"\x1bGetCommentsByPostIdResponse\x12\x18\n" +
	"\acontent\x18\x01 \x01(\tR\acontent\x12\x1b\n" +
	"\tis_pinned\x18\x02 \x01(\bR\bisPinned\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x03 \x01(\x03R\tcommentId\x12\x1b\n" +
	"\tauthor_id\x18\x04 \x01(\x03R\bauthorId\x12\x16\n" +
	"\x06rating\x18\x05 \x03(\tR\x06rating\"-\n" +
	"\x11AddCommentRequest\x12\x18\n" +
	"\acontent\x18\x01 \x01(\tR\acontent\"3\n" +
	"\x12AddCommentResponse\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\x03R\tcommentId\";\n" +
	"\x1aChangeCommentRatingRequest\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\x03R\tcommentId\"5\n" +
	"\x1bChangeCommentRatingResponse\x12\x16\n" +
	"\x06rating\x18\x01 \x03(\tR\x06rating\"2\n" +
	"\x11PinCommentRequest\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\x03R\tcommentId\"3\n" +
	"\x12PinCommentResponse\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\x03R\tcommentId\"5\n" +
	"\x14DeleteCommentRequest\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\x03R\tcommentId\"6\n" +
	"\x15DeleteCommentResponse\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\x03R\tcommentId2\xad\x03\n" +
	"\aComment\x12b\n" +
	"\x13GetCommentsByPostId\x12#.comment.GetCommentsByPostIdRequest\x1a$.comment.GetCommentsByPostIdResponse0\x01\x12E\n" +
	"\n" +
	"AddComment\x12\x1a.comment.AddCommentRequest\x1a\x1b.comment.AddCommentResponse\x12`\n" +
	"\x13ChangeCommentRating\x12#.comment.ChangeCommentRatingRequest\x1a$.comment.ChangeCommentRatingResponse\x12E\n" +
	"\n" +
	"PinComment\x12\x1a.comment.PinCommentRequest\x1a\x1b.comment.PinCommentResponse\x12N\n" +
	"\rDeleteComment\x12\x1d.comment.DeleteCommentRequest\x1a\x1e.comment.DeleteCommentResponseB-Z+github.com/sergeyreshetnyakov/social-protosb\x06proto3"

var (
	file_proto_comment_comment_proto_rawDescOnce sync.Once
	file_proto_comment_comment_proto_rawDescData []byte
)

func file_proto_comment_comment_proto_rawDescGZIP() []byte {
	file_proto_comment_comment_proto_rawDescOnce.Do(func() {
		file_proto_comment_comment_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_comment_comment_proto_rawDesc), len(file_proto_comment_comment_proto_rawDesc)))
	})
	return file_proto_comment_comment_proto_rawDescData
}

var file_proto_comment_comment_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_comment_comment_proto_goTypes = []any{
	(*GetCommentsByPostIdRequest)(nil),  // 0: comment.GetCommentsByPostIdRequest
	(*GetCommentsByPostIdResponse)(nil), // 1: comment.GetCommentsByPostIdResponse
	(*AddCommentRequest)(nil),           // 2: comment.AddCommentRequest
	(*AddCommentResponse)(nil),          // 3: comment.AddCommentResponse
	(*ChangeCommentRatingRequest)(nil),  // 4: comment.ChangeCommentRatingRequest
	(*ChangeCommentRatingResponse)(nil), // 5: comment.ChangeCommentRatingResponse
	(*PinCommentRequest)(nil),           // 6: comment.PinCommentRequest
	(*PinCommentResponse)(nil),          // 7: comment.PinCommentResponse
	(*DeleteCommentRequest)(nil),        // 8: comment.DeleteCommentRequest
	(*DeleteCommentResponse)(nil),       // 9: comment.DeleteCommentResponse
}
var file_proto_comment_comment_proto_depIdxs = []int32{
	0, // 0: comment.Comment.GetCommentsByPostId:input_type -> comment.GetCommentsByPostIdRequest
	2, // 1: comment.Comment.AddComment:input_type -> comment.AddCommentRequest
	4, // 2: comment.Comment.ChangeCommentRating:input_type -> comment.ChangeCommentRatingRequest
	6, // 3: comment.Comment.PinComment:input_type -> comment.PinCommentRequest
	8, // 4: comment.Comment.DeleteComment:input_type -> comment.DeleteCommentRequest
	1, // 5: comment.Comment.GetCommentsByPostId:output_type -> comment.GetCommentsByPostIdResponse
	3, // 6: comment.Comment.AddComment:output_type -> comment.AddCommentResponse
	5, // 7: comment.Comment.ChangeCommentRating:output_type -> comment.ChangeCommentRatingResponse
	7, // 8: comment.Comment.PinComment:output_type -> comment.PinCommentResponse
	9, // 9: comment.Comment.DeleteComment:output_type -> comment.DeleteCommentResponse
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_comment_comment_proto_init() }
func file_proto_comment_comment_proto_init() {
	if File_proto_comment_comment_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_comment_comment_proto_rawDesc), len(file_proto_comment_comment_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_comment_comment_proto_goTypes,
		DependencyIndexes: file_proto_comment_comment_proto_depIdxs,
		MessageInfos:      file_proto_comment_comment_proto_msgTypes,
	}.Build()
	File_proto_comment_comment_proto = out.File
	file_proto_comment_comment_proto_goTypes = nil
	file_proto_comment_comment_proto_depIdxs = nil
}
